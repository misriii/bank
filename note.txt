data binding in angular
--------------------------

ts - component
html - view

1 - one way binding

   1.1 - component to view(ts to html)
        1.1.1 - string interpolation{{}}
        1.1.2 - property binding [property]="data"


   1.2 - view to component
        1.2.1 - event binding (event)="method()"
        1.2.2 - $event binding - onchange - change (event)="method($event)"
        1.2.3 - event binding using template rendering variable - #variable

2 - two way binding

   2.1 - ngModel - FormsModule

folder          - js files - class - methods
library/package - module - class - methods  


angular services
---------------------

a ts file contains methods and datas, all component can access datas inside services

----command - ng g s ServiceName

(pic phone)

one direction only
can access for any component

redirection in angular
---------------------------


path set

redirection in methods
------------------------

navigateByUrl    - methods
Router           - class
AppRoutingModule - module

link
-----

href - routerLink

depentancy injection
--------------------

to use properties(methods and variables) of one class in another class

constructor(accessSpecifier variable:ClassName){

}

access specifier - private(injected class available only in that class)
                  /public(injected class available in all other classess of that file)



form validation in angular
-----------------------------

1- template driven form - html
2- model driven form(reactive form) - html,a model in ts file

                     - model creation
                     ------------------
                      - group() - method
                      - formBuilder - class
                      - reactiveFormsModule - module

                      Advantages
                      ----------
                      easy validation
                      easy data binding without other data binding methods

Regular expressions
--------------------

string type data rules

'[abc]' - either a or b or can
'[^abc]' - except a or b or can
'[a-z]' - all small letters
'[^a-z]' - except all small letters
'[A-B]' - all capital letters
'[^A-B]' - except all capital letters

'[a-zA-Z0-9]' - all small,capital letters and 0-9 numbers

quantifiers
-----------

'[a-zA-b]+' - min count=1 max=...
'[a-zA-b]*' - min count=0 max=...
'[a-zA-b]{5}' - exact 5 numbers
'[a-zA-b]{5,10}' - min length=5 max=10

'[a-zA-b]' - '[a-zA-=b]{1}'

KL05RD1223
'[K][L][0-9]{2}[A-Z]{2}[0-9]{4}'


DOM manipulation-

Angular directives
--------------------

component directive - component creation - ng g c compNmae
structural directive - changing the structure og dom - *ngIf
                       change the structure conditionally

attribute directive  -change the dom with attributes
                      ngclass

Api handling in angular
-----------------------

-create

methods - get,post,put,patch,delete
class- HttpClient
module- HttpClientModule


-ajax - fetch

resolve asynchronous in ts
--------------------------

js - promise - resolve - then()
               reject - catch()

ts - observable - resolve - subscribe()
                - reject - catch()

Angular pipe
-------------
used to transform data format

filter- using data transformtion - pipe

pipe creation in angular
-------------------------

command->
ng g pipe pipeName

transform(data to transform,search string,array key)

data to transform-trasaction array
search string-"","credit","debit"
array key-type

parent child communication in angular
--------------------------------------

parent to child- @Input()
child to parent- @Output()


event creation
--------------

EventEmitter- class used to create user defined events

header creation in angular
--------------------------

HttpHeaders- class used to create header object
